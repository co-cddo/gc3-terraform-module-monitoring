name: Auto-Version and Deploy

on:
  push:
    branches:
      - main
      - basic-monitoring

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read and Bump Version
        id: bump
        run: |
          # Read the current version from the VERSION file
          version=$(cat VERSION)
          
          # Extract major, minor, and patch
          major=$(echo $version | cut -d '.' -f 1 | sed 's/v//')
          minor=$(echo $version | cut -d '.' -f 2)
          patch=$(echo $version | cut -d '.' -f 3)

          # Logic for bumping version
          if [[ "$patch" == "x" ]]; then
            patch=0
          else
            patch=$((patch + 1))
          fi
          
          # Format new version as v<major>.<minor>.<patch>
          new_version="v${major}.${minor}.${patch}"
          
          # Write the new version to the VERSION file and commit
          echo $new_version > VERSION
          git config --local user.name "github-actions"
          git config --local user.email "actions@github.com"
          git commit -am "Bump version to $new_version"
          
          # Create a new git tag
          git tag $new_version
          git push origin $new_version

        outputs:
          new_version: $new_version

  validate:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure we fetch tags

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Format check
        run: terraform fmt -check

  release:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump-version.outputs.new_version }}
          release_name: Release ${{ needs.bump-version.outputs.new_version }}
          body: |
            Version ${{ needs.bump-version.outputs.new_version }} of the Terraform module.
            - [x] Validated syntax
            - [x] Terraform formatted
            - [x] Ready for use
          draft: false
          prerelease: false
